{# 找到所有实现了 AutoModelToDictionary 的类型 #}
{% for t in types.implementing.AutoModelToDictionary %}
{# 为该类型 t 创建 extension #}
extension {{ t.name }} {
    var value: [String: Any] {
        return [
            {# 对类型中的所有存储属性迭代 #}
            {% for val in t.storedVariables %}
            {% if val.isArray %} {# 如果变量是数组，map 其中的值进行嵌套 #}
            "{{val.name}}": {{val.name}}.map { $0.value }
            {% elif val.isDictionary %} {# 如果变量是字典，mapValues 字典值进行嵌套 #}
            "{{val.name}}": {{val.name}}.mapValues { $0.value }
            {% else %} {# 非容器类型，如果是其他的 AutoModelToDictionary，则调用 value, 否则直接使用变量即可 #}
            "{{val.name}}": {% if val.type.implements.AutoModelToDictionary %}{{val.name}}.value{% else %}{{val.name}}{% endif %}
            {% endif%}
            {% if not forloop.last %},{% endif %} {# 为了语法正确 #}
            {% endfor %}
        ]
    }
}
{% endfor %}
